@page "/temperatures"
@rendermode InteractiveWebAssembly

@using ScottPlot
@using ScottPlot.Blazor
@using System.Linq

<h1>Temperature</h1>

<BlazorPlot @ref="blazorPlot" Style="width: 800px; height: 450px;" />

@code {
    BlazorPlot blazorPlot = new();

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            var plt = blazorPlot.Plot;

            // Datos eje X (tiempo)
            double[] xs = { 0, 50, 100, 150, 200 };

            // Datos Temperatura eje Y
            double[] ys = { 0, 38, 75, 113, 150 };

            
            // Configurar eje Y

            var yLeft = plt.Axes.Left;
            yLeft.Label.Text = "Temperature [°C]";
            yLeft.Label.FontSize = 12;
            yLeft.MinimumSize = 50;
            yLeft.Label.ForeColor = Colors.Blue;
            yLeft.SetTicks(ys, ys.Select(v => v.ToString()).ToArray());

            // Añadir scatter plot (línea)
            var scatter = plt.Add.Scatter(xs, ys);
            scatter.Color = Colors.DarkRed;
            scatter.LineWidth = 2;
            scatter.MarkerSize = 0; 
            
            
            // Configurar eje X
            var xAxis = plt.Axes.Bottom;
            xAxis.Label.Text = "Time [minutes]";
           
            xAxis.FrameLineStyle.IsVisible = true;
            xAxis.FrameLineStyle.Color = Colors.Black;

            // Ajustar márgenes para que las etiquetas quepan sin cortarse
            plt.Axes.Margins(left: 100, right: 20, top: 10, bottom: 40);

            xAxis.Min = xs.Min();
            xAxis.Max = xs.Max();

            yLeft.Min = ys.Min();
            yLeft.Max = ys.Max();

            blazorPlot.Refresh();
        }
    }
}
